name: Quick Test Suite

on:
  push:
    branches: [ feature/*, bugfix/* ]
  workflow_dispatch:

jobs:
  quick-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install and setup Ollama
      run: |
        curl -fsSL https://ollama.ai/install.sh | sh
        ollama serve &
        timeout 60 bash -c 'until curl -f http://localhost:11434/api/tags; do sleep 2; done'
        ollama pull tinyllama

    - name: Install Playwright browsers
      run: |
        playwright install --with-deps

    - name: Train model and start Flask app
      run: |
        mkdir -p models
        python scripts/train_iris_model.py
        python app.py &
        timeout 60 bash -c 'until curl -f http://localhost:5001/health; do sleep 2; done'

    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short --maxfail=3

    - name: Test sample endpoints manually
      run: |
        # Test health endpoint
        curl -f http://localhost:5001/health
        
        # Test classification endpoint
        curl -f -X POST http://localhost:5001/api/v1/classify \
          -H "Content-Type: application/json" \
          -d '{"sepal_length": 5.1, "sepal_width": 3.5, "petal_length": 1.4, "petal_width": 0.2}'
        
        # Test secure generation (will hit Ollama)
        curl -f -X POST http://localhost:5001/api/v1/generate-secure \
          -H "Content-Type: application/json" \
          -d '{"prompt": "What is AI?"}'